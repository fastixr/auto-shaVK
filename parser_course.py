from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import re
import pandas as pd
from openpyxl import Workbook
from openpyxl.utils.dataframe import dataframe_to_rows
from openpyxl.styles import Font
import os
from selenium.webdriver.common.keys import Keys

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫–µ—à –ø—Ä–æ—Ñ–∏–ª–µ–π –í–ö, –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –≤ —Ç–µ–∫—É—â–µ–º –∑–∞–ø—É—Å–∫–µ
processed_vk_profiles: set[str] = set()


def open_vk_homework_page():
    options = Options()
    options.add_argument("user-data-dir=G:/SHA_VK/chrome_profile")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--disable-gpu")
    options.add_argument("--disable-extensions")
    options.add_argument("--disable-plugins")
    options.add_argument("--disable-images")
    options.add_argument("--disable-javascript")
    options.add_argument("--disable-web-security")
    options.add_argument("--allow-running-insecure-content")
    
    # –£—Å–∫–æ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü
    try:
        options.page_load_strategy = 'eager'
    except Exception:
        pass
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    try:
        options.add_experimental_option("prefs", {
            "profile.managed_default_content_settings.images": 2,
            "profile.managed_default_content_settings.javascript": 1
        })
    except Exception:
        pass
    
    driver = webdriver.Chrome(options=options)
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã
    try:
        driver.set_page_load_timeout(30)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 60 –¥–æ 30 —Å–µ–∫—É–Ω–¥
        driver.implicitly_wait(3)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 10 –¥–æ 3 —Å–µ–∫—É–Ω–¥
    except Exception:
        pass
    
    print("üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –¥–æ–º–∞—à–∫–∞–º–∏...")
    driver.get("https://authors.vk.company/profile/v.chernikov/homework/?type=ready&owner=all&p=1")
    return driver


def go_to_last_homework(driver):
    wait = WebDriverWait(driver, 15)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 20 –¥–æ 15 —Å–µ–∫—É–Ω–¥
    # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    last_page_btn = wait.until(EC.element_to_be_clickable((
        By.CSS_SELECTOR,
        "#react-homeworks > div > div.sc-gFqAkR.kiXkom > div > button.r-button.button-pagination.boundary > span"
    )))
    last_page_btn.click()

    # –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã —Å –¥–æ–º–∞—à–∫–∞–º–∏ (—É–º–µ–Ω—å—à–∞–µ–º —Ç–∞–π–º–∞—É—Ç)
    wait.until(EC.presence_of_element_located((
        By.CSS_SELECTOR,
        "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr"
    )))
    time.sleep(5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 8 –¥–æ 5 —Å–µ–∫—É–Ω–¥

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    rows = driver.find_elements(By.CSS_SELECTOR, "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr")
    last_row = rows[-1]
    # –í –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–æ–∫–µ –∏—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –¥–æ–º–∞—à–∫—É
    last_hw_link = last_row.find_element(By.CSS_SELECTOR, "td.sc-eqUAAy.sc-iGgWBj.jjpiPE.gbwPlL > a")
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ (Ctrl+Click)
    driver.execute_script("arguments[0].scrollIntoView({block: 'center'});", last_hw_link)
    time.sleep(3)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 5 –¥–æ 3 —Å–µ–∫—É–Ω–¥
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ —á–µ—Ä–µ–∑ JavaScript
    homework_url = last_hw_link.get_attribute("href")
    driver.execute_script("window.open(arguments[0], '_blank');", homework_url)
    time.sleep(0.5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 1 –¥–æ 0.5 —Å–µ–∫—É–Ω–¥—ã
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω–æ–≤—É—é –≤–∫–ª–∞–¥–∫—É
    driver.switch_to.window(driver.window_handles[-1])
    
    # –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    wait.until(EC.presence_of_element_located((
        By.CSS_SELECTOR,
        "#content > div.homework-chat-header > div.homework-chat-header-left > h1"
    )))


def process_homework_page(driver):
    wait = WebDriverWait(driver, 5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 8 –¥–æ 5 —Å–µ–∫—É–Ω–¥
    
    # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –µ—Å—Ç—å –ª–∏ —É–∂–µ –í–ª–∞–¥–∏–º–∏—Ä –ß–µ—Ä–Ω–∏–∫–æ–≤
    try:
        tutors_block = driver.find_element(By.CSS_SELECTOR, "#homework-tutors .block-content")
        tutor_links = tutors_block.find_elements(By.CSS_SELECTOR, "a.user-name")
        for link in tutor_links:
            if link.text.strip() == "–í–ª–∞–¥–∏–º–∏—Ä –ß–µ—Ä–Ω–∏–∫–æ–≤":
                print("–í–ª–∞–¥–∏–º–∏—Ä –ß–µ—Ä–Ω–∏–∫–æ–≤ —É–∂–µ –Ω–∞–∑–Ω–∞—á–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
                return
    except Exception:
        pass

    # 1. –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
    btn = wait.until(EC.element_to_be_clickable((
        By.CSS_SELECTOR,
        "#homework-tutors .buttons-box button"
    )))
    btn.click()

    # 2. –ö–ª–∏–∫ –ø–æ –ø–æ–ª—é –ø–æ–∏—Å–∫–∞
    search_input = wait.until(EC.element_to_be_clickable((
        By.CSS_SELECTOR,
        "#homework-tutors .block-content input"
    )))
    search_input.click()

    # 3. –ù–∞–π—Ç–∏ –∏ –æ—Ç–º–µ—Ç–∏—Ç—å –í–ª–∞–¥–∏–º–∏—Ä–∞ –ß–µ—Ä–Ω–∏–∫–æ–≤–∞
    labels = driver.find_elements(By.CSS_SELECTOR, "#homework-tutors .search-label")
    for label in labels:
        if label.text.strip() == "–í–ª–∞–¥–∏–º–∏—Ä –ß–µ—Ä–Ω–∏–∫–æ–≤":
            parent_div = label.find_element(By.XPATH, "..")
            checkbox = parent_div.find_element(By.CSS_SELECTOR, "input[type=checkbox]")
            if not checkbox.is_selected():
                driver.execute_script("arguments[0].click();", checkbox)
                print("‚úÖ –ß–µ–∫–±–æ–∫—Å –æ—Ç–º–µ—á–µ–Ω")
            break

    # 4. –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ ESC (–±—ã—Å—Ç—Ä–µ–µ)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ESCAPE)
    time.sleep(0.1)

    # 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º
    confirm_btn = wait.until(EC.element_to_be_clickable((
        By.CSS_SELECTOR,
        "#homework-tutors .buttons-box .btn.btn-primary"
    )))
    driver.execute_script("arguments[0].click();", confirm_btn)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä—è—é—â–∏–π –Ω–∞–∑–Ω–∞—á–µ–Ω")
    
    # –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∏–∞–ª–æ–≥–∞
    try:
        wait.until(EC.presence_of_element_located((
            By.CSS_SELECTOR,
            "#react-talk .talk"
        )))
    except Exception:
        pass

def remove_from_reviewers(driver):
    """–£–¥–∞–ª—è–µ—Ç –í–ª–∞–¥–∏–º–∏—Ä–∞ –ß–µ—Ä–Ω–∏–∫–æ–≤–∞ –∏–∑ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö, –µ—Å–ª–∏ —Ç–∞–º –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞"""
    wait = WebDriverWait(driver, 8)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 10 –¥–æ 8 —Å–µ–∫—É–Ω–¥
    
    max_attempts = 3  # –º–∞–∫—Å–∏–º—É–º 3 –ø–æ–ø—ã—Ç–∫–∏
    attempt = 1
    
    while attempt <= max_attempts:
        try:
            # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö
            tutors_block = driver.find_element(By.CSS_SELECTOR, "#homework-tutors .block-content")
            tutor_users = tutors_block.find_elements(By.CSS_SELECTOR, "div.user.user-md")
            
            if len(tutor_users) <= 1:
                print("–í–ª–∞–¥–∏–º–∏—Ä –ß–µ—Ä–Ω–∏–∫–æ–≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π - –Ω–µ —É–¥–∞–ª—è–µ–º")
                return
            
            print(f"–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö: {len(tutor_users)}. –£–¥–∞–ª—è–µ–º –í–ª–∞–¥–∏–º–∏—Ä–∞ –ß–µ—Ä–Ω–∏–∫–æ–≤–∞...")
            
            # 1. –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            change_btn = driver.find_element(By.CSS_SELECTOR, "#homework-tutors .buttons-box button")
            change_btn.click()
            time.sleep(0.5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 1 –¥–æ 0.5 —Å–µ–∫—É–Ω–¥—ã
            
            # 2. –ö–ª–∏–∫ –ø–æ –ø–æ–ª—é –≤–≤–æ–¥–∞
            input_field = driver.find_element(By.CSS_SELECTOR, "#homework-tutors .block-content input")
            input_field.click()
            time.sleep(0.3)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 1 –¥–æ 0.3 —Å–µ–∫—É–Ω–¥—ã
            
            # 3. –ù–∞–π—Ç–∏ –∏ —Å–Ω—è—Ç—å —á–µ–∫–±–æ–∫—Å —Å –í–ª–∞–¥–∏–º–∏—Ä–∞ –ß–µ—Ä–Ω–∏–∫–æ–≤–∞
            labels = driver.find_elements(By.CSS_SELECTOR, "#homework-tutors .search-label")
            for label in labels:
                if label.text.strip() == "–í–ª–∞–¥–∏–º–∏—Ä –ß–µ—Ä–Ω–∏–∫–æ–≤":
                    parent_div = label.find_element(By.XPATH, "..")
                    checkbox = parent_div.find_element(By.CSS_SELECTOR, "input[type=checkbox]")
                    
                    if checkbox.is_selected():
                        driver.execute_script("arguments[0].click();", checkbox)
                        print("–°–Ω—è—Ç —á–µ–∫–±–æ–∫—Å —Å –í–ª–∞–¥–∏–º–∏—Ä–∞ –ß–µ—Ä–Ω–∏–∫–æ–≤–∞")
                    break
            
            # 4. –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ —á–µ—Ä–µ–∑ ESC
            driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ESCAPE)
            time.sleep(0.3)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 1 –¥–æ 0.3 —Å–µ–∫—É–Ω–¥—ã
            
            # 5. –°–æ—Ö—Ä–∞–Ω—è–µ–º
            save_btn = driver.find_element(By.CSS_SELECTOR, "#homework-tutors .buttons-box .btn.btn-primary")
            driver.execute_script("arguments[0].click();", save_btn)
            time.sleep(1)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 2 –¥–æ 1 —Å–µ–∫—É–Ω–¥—ã
            print("‚úÖ –í–ª–∞–¥–∏–º–∏—Ä –ß–µ—Ä–Ω–∏–∫–æ–≤ —É–¥–∞–ª—ë–Ω –∏–∑ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö")
            return  # –£—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö (–ø–æ–ø—ã—Ç–∫–∞ {attempt}): {e}")
            
            if "stale element" in str(e).lower():
                print(f"üîÑ Stale element error - –ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ –ø–∞—É–∑–∞–º–∏...")
                attempt += 1
                if attempt <= max_attempts:
                    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–∞—É–∑—ã –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø–æ–ø—ã—Ç–∫–∞—Ö
                    time.sleep(2)  # –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
                    continue
            else:
                print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –Ω–µ —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å–æ stale element: {e}")
                break
    
    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–∑ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö –ø–æ—Å–ª–µ {max_attempts} –ø–æ–ø—ã—Ç–æ–∫")


def extract_cloud_links(driver):
    # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    cloud_links = []
    
    print("üîç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫ —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ–±–ª–∞–∫–æ...")
    
    # 1. –ü–û–ò–°–ö –°–°–´–õ–û–ö –í –î–ò–ê–õ–û–ì–ï - –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –Ω–∞–¥—ë–∂–Ω—ã–π –ø–æ–¥—Ö–æ–¥
    try:
        print("üîç –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –≤ –¥–∏–∞–ª–æ–≥–µ...")
        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        try:
            # –ò—â–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            user_messages = driver.find_elements(By.CSS_SELECTOR, "#react-talk .message-user .text")
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(user_messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
            
            for i, message in enumerate(user_messages):
                try:
                    # –ü–æ–ª—É—á–∞–µ–º HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                    message_html = message.get_attribute("innerHTML")
                    message_text = message.text
                    
                    # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                    
                    # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –≤ HTML (—Ç–µ–≥–∏ <a>)
                    href_pattern = r'href=["\']([^"\']+)["\']'
                    hrefs_in_html = re.findall(href_pattern, message_html)
                    
                    if hrefs_in_html:
                        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                        for href in hrefs_in_html:
                            if href and href.startswith('http'):
                                if is_valid_cloud_link(href):
                                    cloud_links.append(href)
                                    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –∏–∑ HTML —Å–æ–æ–±—â–µ–Ω–∏—è {i+1}: {href}")
                                else:
                                    print(f"‚ùå –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ HTML: {href}")
                    
                    # –ò—â–µ–º URL –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ HTML –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤)
                    if not hrefs_in_html and message_text:
                        url_pattern = r'https?://[^\s<>"{}|\\^`\[\]]+'
                        urls_in_text = re.findall(url_pattern, message_text)
                        
                        if urls_in_text:
                            # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                            for url in urls_in_text:
                                if is_valid_cloud_link(url):
                                    cloud_links.append(url)
                                    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è {i+1}: {url}")
                                else:
                                    print(f"üîç –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ —Ç–µ–∫—Å—Ç–∞: {url}")
                    
                except Exception as e:
                    print(f"üîç –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {i+1}: {e}")
                    continue
            
        except Exception as e:
            print(f"üîç –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
            # Fallback: –∏—â–µ–º –ø–æ –≤—Å–µ–º—É –¥–∏–∞–ª–æ–≥—É
            try:
                dialog_element = driver.find_element(By.CSS_SELECTOR, "#react-talk .talk")
                dialog_html = dialog_element.get_attribute("innerHTML")
                dialog_text = dialog_element.text
                
                # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                
                # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –≤ HTML –¥–∏–∞–ª–æ–≥–∞
                href_pattern = r'href=["\']([^"\']+)["\']'
                hrefs_in_dialog = re.findall(href_pattern, dialog_html)
                
                if hrefs_in_dialog:
                                            # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                    for href in hrefs_in_dialog:
                        if href and href.startswith('http'):
                            if is_valid_cloud_link(href):
                                cloud_links.append(href)
                                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –∏–∑ HTML –¥–∏–∞–ª–æ–≥–∞: {href}")
                            else:
                                print(f"‚ùå –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ HTML –¥–∏–∞–ª–æ–≥–∞: {href}")
                
                # –ò—â–µ–º URL –≤ —Ç–µ–∫—Å—Ç–µ –¥–∏–∞–ª–æ–≥–∞
                if dialog_text:
                    url_pattern = r'https?://[^\s<>"{}|\\^`\[\]]+'
                    urls_in_dialog_text = re.findall(url_pattern, dialog_text)
                    
                    if urls_in_dialog_text:
                        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                        for url in urls_in_dialog_text:
                            if is_valid_cloud_link(url):
                                cloud_links.append(url)
                                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞: {url}")
                            else:
                                print(f"üîç –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞: {url}")
                
            except Exception as e2:
                print(f"üîç –û—à–∏–±–∫–∞ –ø—Ä–∏ fallback –ø–æ–∏—Å–∫–µ: {e2}")
        
        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –¥–∏–∞–ª–æ–≥–µ: {e}")
    
    # 2. –ü–û–ò–°–ö –°–°–´–õ–û–ö –í –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò
    try:
        print("üîç –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏...")
        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        
        # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –≤ HTML –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        comment_div = driver.find_element(By.CSS_SELECTOR, "#homework-panel .content-renderer")
        comment_html = comment_div.get_attribute("innerHTML")
        
        if comment_html:
            # –ë—ã—Å—Ç—Ä—ã–π regex –¥–ª—è –≤—Å–µ—Ö href
            href_pattern = r'href=["\']([^"\']+)["\']'
            hrefs = re.findall(href_pattern, comment_html)
            
            for href in hrefs:
                if href and href.startswith('http'):
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
                    if is_valid_cloud_link(href):
                        cloud_links.append(href)
                        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {href}")
                    else:
                        print(f"‚ùå –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {href}")
                else:
                    print(f"üîç –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ-HTTP —Å—Å—ã–ª–∫—É –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {href}")
            
            # –ï—Å–ª–∏ HTML-–ø–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
            if not hrefs:
                try:
                    print("üîç HTML-–ø–æ–∏—Å–∫ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –∏—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É...")
                    comment_text = comment_div.text
                    if comment_text:
                        # –ò—â–µ–º URL –≤ —Ç–µ–∫—Å—Ç–µ
                        url_pattern = r'https?://[^\s<>"{}|\\^`\[\]]+'
                        urls_in_text = re.findall(url_pattern, comment_text)
                        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                        
                        for url in urls_in_text:
                            if is_valid_cloud_link(url):
                                cloud_links.append(url)
                                print(f"üîç –ù–∞–π–¥–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –≤ —Ç–µ–∫—Å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {url}")
                            else:
                                print(f"üîç –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É –≤ —Ç–µ–∫—Å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {url}")
                except Exception as e:
                    print(f"üîç –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ —Ç–µ–∫—Å—Ç—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {e}")
        
        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏: {e}")
    
    # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    cloud_links = list(set(cloud_links))
    
    # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    if cloud_links:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ ({len(cloud_links)} —à—Ç.)")
        for link in cloud_links:
            print(f"   ‚Ä¢ {link}")
    else:
        print(f"‚ùå –°—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    return cloud_links


def create_excel_table():
    # –°–æ–∑–¥–∞—ë–º DataFrame —Å –Ω—É–∂–Ω—ã–º–∏ —Å—Ç–æ–ª–±—Ü–∞–º–∏
    columns = [
        '–ö–û', '–ì—Ä—É–ø–ø–∞', '–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', '–í–• –ê–Ω–∫–µ—Ç–∞ (–£1)',
        '–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ1', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –î–ó ‚Ññ1', '–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ1',
        '–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ2', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –î–ó ‚Ññ2', '–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ2',
        '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ', '–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ',
        '–§–ò –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)', '–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ',
        '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤', '–°—É–º–º–∞'
    ]
    
    filename = "homework_data.xlsx"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if os.path.exists(filename):
        print(f"–§–∞–π–ª {filename} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –±—É–¥–µ–º –¥–æ–ø–æ–ª–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return
    
    # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    df = pd.DataFrame(columns=columns)
    
    with pd.ExcelWriter(filename, engine='openpyxl') as writer:
        df.to_excel(writer, index=False, sheet_name='–î–∞–Ω–Ω—ã–µ')
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–±–æ—á–∏–π –ª–∏—Å—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫
        worksheet = writer.sheets['–î–∞–Ω–Ω—ã–µ']
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫ –ø–æ–¥ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        for column in worksheet.columns:
            max_length = 0
            column_letter = column[0].column_letter
            
            for cell in column:
                try:
                    if len(str(cell.value)) > max_length:
                        max_length = len(str(cell.value))
                except:
                    pass
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–∫–∏ (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ 15, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è 50)
            adjusted_width = min(max(max_length + 2, 15), 50)
            worksheet.column_dimensions[column_letter].width = adjusted_width
    
    print(f"–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞: {filename}")


def extract_student_data(driver):
    wait = WebDriverWait(driver, 5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 8 –¥–æ 5 —Å–µ–∫—É–Ω–¥
    student_data = {}
    
    # 1. –ò–∑–≤–ª–µ–∫–∞–µ–º –§–ò –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
    try:
        user_name_element = driver.find_element(By.CSS_SELECTOR, "#homework-marks .user-name")
        student_data['full_name'] = user_name_element.text.strip()
        student_data['profile_link'] = user_name_element.get_attribute("href")
        print(f"–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞: {student_data['full_name']}")
        print(f"–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: {student_data['profile_link']}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞: {e}")
        student_data['full_name'] = ""
        student_data['profile_link'] = ""
    
    # 2. –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤
    try:
        mark_element = driver.find_element(By.CSS_SELECTOR, "#homework-marks .mark-value")
        mark_text = mark_element.text.strip()
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É –∏–∑ —Ç–µ–∫—Å—Ç–∞ "16 –±–∞–ª–ª–æ–≤"
        mark_match = re.search(r'(\d+)', mark_text)
        if mark_match:
            student_data['mark'] = int(mark_match.group(1))
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤: {student_data['mark']}")
        else:
            student_data['mark'] = ""
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–ª–æ–≤: {e}")
        student_data['mark'] = ""
    
    return student_data

def extract_profile_data(driver):
    wait = WebDriverWait(driver, 5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 8 –¥–æ 5 —Å–µ–∫—É–Ω–¥
    profile_data = {}
    
    # 1. –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã
    try:
        group_element = driver.find_element(By.CSS_SELECTOR, "#profile-content .profile-maingroup")
        # –ò—â–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –≤–Ω—É—Ç—Ä–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
        group_links = group_element.find_elements(By.TAG_NAME, "a")
        group_number = ""
        for link in group_links:
            text = link.text.strip()
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥—Ä—É–ø–ø–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –¢–ë
            if text.startswith("–¢–ë"):
                group_number = text
                break
        
        profile_data['group'] = group_number
        if group_number:
            print(f"–ù–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã: {group_number}")
        else:
            print("–ì—Ä—É–ø–ø–∞, –Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å –¢–ë, –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞ –≥—Ä—É–ø–ø—ã: {e}")
        profile_data['group'] = ""
    
    # 2. –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
    try:
        vk_element = driver.find_element(By.CSS_SELECTOR, "#content .profile-right .profile-external-accounts a")
        vk_url = vk_element.get_attribute("href")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ vk.com
        if vk_url and "vk.com" in vk_url:
            profile_data['vk_link'] = vk_url
            print(f"–°—Å—ã–ª–∫–∞ –Ω–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: {vk_url}")
        else:
            profile_data['vk_link'] = ""
            print("–°—Å—ã–ª–∫–∞ –Ω–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: {e}")
        profile_data['vk_link'] = ""
    
    return profile_data

def extract_vk_name(driver):
    wait = WebDriverWait(driver, 5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 8 –¥–æ 5 —Å–µ–∫—É–Ω–¥
    try:
        # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –í–ö
        name_element = driver.find_element(By.CSS_SELECTOR, "#owner_page_name")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ (–§–ò –∏–∑ –í–ö)
        vk_name = name_element.text.strip()
        
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—à–Ω–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—É–±–∏—Ä–∞–µ–º "–∑–∞—Ö–æ–¥–∏–ª–∞ —Ç—Ä–∏ —á–∞—Å–∞ –Ω–∞–∑–∞–¥" –∏ —Ç.–¥.)
        # –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å –¥–æ –ø–µ—Ä–≤–æ–≥–æ span —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        if '–∑–∞—Ö–æ–¥–∏–ª–∞' in vk_name or '–∑–∞—Ö–æ–¥–∏–ª' in vk_name:
            vk_name = vk_name.split('–∑–∞—Ö–æ–¥–∏–ª')[0].strip()
        
        print(f"–§–ò –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: {vk_name}")
        return vk_name
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –§–ò –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ: {e}")
        return ""

def compare_and_update_names(platform_name, vk_name):
    """–°—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –§–ò —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –í–ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –§–ò –∏–∑ –í–ö –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç–ª–∏—á–∞—é—Ç—Å—è"""
    if platform_name and vk_name and platform_name != vk_name:
        print(f"–§–ò –æ—Ç–ª–∏—á–∞—é—Ç—Å—è! –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: '{platform_name}', –í–ö: '{vk_name}'")
        return vk_name
    elif platform_name and vk_name and platform_name == vk_name:
        print(f"–§–ò –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ: '{platform_name}'")
        return ""
    else:
        print("–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ä–∞–≤–Ω–∏—Ç—å –§–ò")
        return ""

def go_to_vk_and_compare_names(driver, vk_url, platform_name):
    """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö –≤ —Ç–æ–π –∂–µ –≤–∫–ª–∞–¥–∫–µ, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –§–ò –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞–∑–∞–¥ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å."""
    if not vk_url:
        print("–°—Å—ã–ª–∫–∞ –Ω–∞ –í–ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return ""
    try:
        profile_url = driver.current_url
        driver.get(vk_url)
        # –ñ–¥—ë–º —Ç–æ–ª—å–∫–æ –∏–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        wait = WebDriverWait(driver, 2)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 3 –¥–æ 2 —Å–µ–∫—É–Ω–¥
        vk_name = extract_vk_name(driver)
        different_name = compare_and_update_names(platform_name, vk_name)
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å (–±—ã—Å—Ç—Ä–µ–µ, —á–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∞–º–∏)
        try:
            driver.get(profile_url)
        except Exception:
            pass
        return different_name
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –í–ö: {e}")
        try:
            driver.get(profile_url)
        except Exception:
            pass
        return ""

def update_excel_with_homework_data(homework_number, cloud_links, student_data, profile_data=None, vk_different_name=""):
    filename = "homework_data.xlsx"
    
    # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    mark = student_data.get('mark', '')
    if mark == '' or mark is None:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –±–∞–ª–ª–æ–≤ –¥–ª—è –î–ó ‚Ññ{homework_number}")
        return False
    
    if mark >= 2 and not cloud_links:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ë–∞–ª–ª–æ–≤ {mark} ‚â• 2, –Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –î–ó ‚Ññ{homework_number}")
        return False
    
    print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—à–ª–∏ —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É, —Å–æ—Ö—Ä–∞–Ω—è–µ–º...")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Ç–∞–±–ª–∏—Ü—É
        df = pd.read_excel(filename)
        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    except FileNotFoundError:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π
        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        columns = [
            '–ö–û', '–ì—Ä—É–ø–ø–∞', '–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', '–í–• –ê–Ω–∫–µ—Ç–∞ (–£1)',
            '–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ1', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –î–ó ‚Ññ1', '–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ1',
            '–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ2', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –î–ó ‚Ññ2', '–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ2',
            '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ', '–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ',
            '–§–ò –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)', '–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ',
            '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤', '–°—É–º–º–∞'
        ]
        df = pd.DataFrame(columns=columns)
    
    # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–æ–∫—É —Å —Ç–∞–∫–∏–º –∂–µ –§–ò –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
    existing_row_index = None
    current_full_name = student_data.get('full_name', '')
    current_profile_link = student_data.get('profile_link', '')
    
    # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    
    for index, row in df.iterrows():
        existing_full_name = str(row.get('–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', ''))
        existing_profile_link = str(row.get('–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ', ''))
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –§–ò –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
        if (current_full_name == existing_full_name and 
            current_profile_link == existing_profile_link and 
            current_full_name != '' and current_profile_link != ''):
            existing_row_index = index
            # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            break
    
    if existing_row_index is not None:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
        print(f"–ù–∞–π–¥–µ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞: {current_full_name}")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–æ–º–µ—Ä–∞ –î–ó
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–ª–ª—ã (–≤—Å–µ–≥–¥–∞)
        if homework_number == 1:
            df.at[existing_row_index, '–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ1'] = student_data.get('mark', '')
            print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –±–∞–ª–ª—ã –∑–∞ –î–ó ‚Ññ1: {student_data.get('mark', '')}")
        elif homework_number == 2:
            df.at[existing_row_index, '–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ2'] = student_data.get('mark', '')
            print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –±–∞–ª–ª—ã –∑–∞ –î–ó ‚Ññ2: {student_data.get('mark', '')}")
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –î–ó: {homework_number}")
        
        # –ó–∞—Ç–µ–º —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±–ª–∞–∫–æ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
        if cloud_links:
            cloud_link = process_cloud_links(cloud_links)
            link_col = f'–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ{homework_number}'
            existing_link = df.at[existing_row_index, link_col]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–∏—Å—å –ª–∏ —Å—Å—ã–ª–∫–∏
            if existing_link != cloud_link:
                if homework_number == 1:
                    df.at[existing_row_index, '–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ1'] = cloud_link
                elif homework_number == 2:
                    df.at[existing_row_index, '–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ2'] = cloud_link
                
                if existing_link and existing_link != '':
                    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ (–±—ã–ª–æ: {existing_link}, —Å—Ç–∞–ª–æ: {cloud_link})")
                else:
                    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ: {cloud_link}")
            else:
                print(f"‚ÑπÔ∏è –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å: {cloud_link}")
        else:
            print("–°—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –±–∞–ª–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã
        if profile_data:
            if profile_data.get('group'):
                df.at[existing_row_index, '–ì—Ä—É–ø–ø–∞'] = profile_data['group']
            if profile_data.get('vk_link'):
                df.at[existing_row_index, '–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ'] = profile_data['vk_link']
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –§–ò –∏–∑ –í–ö, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
        if vk_different_name:
            df.at[existing_row_index, '–§–ò –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)'] = vk_different_name
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –§–ò –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å, –µ—Å–ª–∏ –æ–Ω–∏ –ø—É—Å—Ç—ã–µ
        if not df.at[existing_row_index, '–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã']:
            df.at[existing_row_index, '–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'] = current_full_name
        if not df.at[existing_row_index, '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ']:
            df.at[existing_row_index, '–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ'] = current_profile_link
            
    else:
        # –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É
        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        student_number = len(df) + 1
        new_row = pd.Series(index=df.columns)
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        new_row['–ö–û'] = student_number
        new_row['–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã'] = current_full_name
        new_row['–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ'] = current_profile_link
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è, –µ—Å–ª–∏ –æ–Ω–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã
        if profile_data:
            new_row['–ì—Ä—É–ø–ø–∞'] = profile_data.get('group', '')
            new_row['–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ'] = profile_data.get('vk_link', '')
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –§–ò –∏–∑ –í–ö, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
        if vk_different_name:
            new_row['–§–ò –∏–∑ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ (–µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)'] = vk_different_name
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –±–∞–ª–ª—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–æ–º–µ—Ä–∞ –î–ó (–≤—Å–µ–≥–¥–∞)
        if homework_number == 1:
            new_row['–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ1'] = student_data.get('mark', '')
            print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –±–∞–ª–ª—ã –∑–∞ –î–ó ‚Ññ1: {student_data.get('mark', '')}")
        elif homework_number == 2:
            new_row['–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ2'] = student_data.get('mark', '')
            print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –±–∞–ª–ª—ã –∑–∞ –î–ó ‚Ññ2: {student_data.get('mark', '')}")
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –î–ó: {homework_number}")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –î–ó –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–æ–º–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å)
        if cloud_links:
            cloud_link = process_cloud_links(cloud_links)
            if homework_number == 1:
                new_row['–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ1'] = cloud_link
            elif homework_number == 2:
                new_row['–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ2'] = cloud_link
            print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ: {cloud_link}")
        else:
            print("–°—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –±–∞–ª–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ DataFrame
        df = pd.concat([df, pd.DataFrame([new_row])], ignore_index=True)
        print(f"–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π —Å—Ç—É–¥–µ–Ω—Ç ‚Ññ{student_number}: {current_full_name}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
    with pd.ExcelWriter(filename, engine='openpyxl') as writer:
        df.to_excel(writer, index=False, sheet_name='–î–∞–Ω–Ω—ã–µ')
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
        worksheet = writer.sheets['–î–∞–Ω–Ω—ã–µ']
        for column in worksheet.columns:
            max_length = 0
            column_letter = column[0].column_letter
            
            for cell in column:
                try:
                    if len(str(cell.value)) > max_length:
                        max_length = len(str(cell.value))
                except:
                    pass
            
            adjusted_width = min(max(max_length + 2, 15), 50)
            worksheet.column_dimensions[column_letter].width = adjusted_width
    
    print(f"–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É: {filename}")

def go_to_student_profile(driver, profile_url):
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ —Ç–æ–π –∂–µ –≤–∫–ª–∞–¥–∫–µ
    driver.get(profile_url)
    time.sleep(0.5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 0.8 –¥–æ 0.5 —Å–µ–∫—É–Ω–¥—ã
    print(f"–ü–µ—Ä–µ—à–ª–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞: {profile_url}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
    profile_data = extract_profile_data(driver)
    return profile_data

def get_homework_number_and_fill_data(driver):
    wait = WebDriverWait(driver, 5)  # —É–º–µ–Ω—å—à–∞–µ–º —Å 8 –¥–æ 5 —Å–µ–∫—É–Ω–¥
    try:
        header = driver.find_element(By.CSS_SELECTOR, "#content .homework-chat-header-left h1")
        header_text = header.text.strip()
        print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫ –î–ó: {header_text}")
        homework_number = None
        
        # –£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –î–ó
        if "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ1" in header_text or "‚Ññ1" in header_text:
            homework_number = 1
            print("‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ –î–ó ‚Ññ1")
        elif "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ2" in header_text or "‚Ññ2" in header_text or "–û–≥–ª—è–Ω–∏—Ç–µ—Å—å –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º" in header_text:
            homework_number = 2
            print("‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ –î–ó ‚Ññ2")
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –î–ó: {header_text}")
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –Ω–æ–º–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
            import re
            number_match = re.search(r'‚Ññ(\d+)', header_text)
            if number_match:
                homework_number = int(number_match.group(1))
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω –Ω–æ–º–µ—Ä –î–ó –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ: ‚Ññ{homework_number}")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–æ–º–µ—Ä –î–ó")
            return None
        
        print(f"–û–ø—Ä–µ–¥–µ–ª—ë–Ω –Ω–æ–º–µ—Ä –î–ó: {homework_number}")

        # –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ –∏ —Å—Ä–∞–∑—É —É–¥–∞–ª—è–µ–º —Å–µ–±—è –∏–∑ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö
        student_data = extract_student_data(driver)
        print(f"üìä –ò–∑–≤–ª–µ—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞: {student_data.get('full_name', 'N/A')}, –±–∞–ª–ª—ã: {student_data.get('mark', 'N/A')}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∏—Å–∫–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ
        mark = student_data.get('mark', '')
        if mark == '' or mark is None:
            print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –±–∞–ª–ª—ã —Å—Ç—É–¥–µ–Ω—Ç–∞")
            return homework_number
        
        if mark >= 2:
            print(f"üîç –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ (–±–∞–ª–ª–æ–≤ {mark} ‚â• 2)...")
            cloud_links = extract_cloud_links(driver)
        else:
            print(f"üîç –°—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è (–±–∞–ª–ª–æ–≤ {mark} < 2)")
            cloud_links = []
        
        print("–£–¥–∞–ª—è–µ–º —Å–µ–±—è –∏–∑ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ–±–ª–∞–∫–æ...")
        try:
            remove_from_reviewers(driver)
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏—Ö: {e}")
        
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
        print(f"\nüîç –í–ê–õ–ò–î–ê–¶–ò–Ø –î–ê–ù–ù–´–• –î–õ–Ø –î–ó ‚Ññ{homework_number}:")
        if not validate_student_data(student_data, cloud_links, homework_number):
            print(f"‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞ –¥–ª—è –î–ó ‚Ññ{homework_number}. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ.")
            return homework_number

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ª–∏ —É–∂–µ –¥–æ–º–∞—à–∫–∞ –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
        already_processed = check_homework_already_processed(homework_number, student_data, check_links_only=True)
        
        if already_processed:
            print(f"üîç –î–æ–º–∞—à–∫–∞ ‚Ññ{homework_number} –¥–ª—è {student_data.get('full_name', 'N/A')} —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞")
            print(f"üîç –í—Å—ë —Ä–∞–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–æ–∫ –∏ –±–∞–ª–ª–æ–≤")
            print(f"üîç –ù–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥—ã –≤ –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞ –í–ö –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è")
            
            # –î–ª—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞ –í–ö
            profile_data = None
            vk_different_name = ""
        else:
            print(f"üîç –î–æ–º–∞—à–∫–∞ ‚Ññ{homework_number} –¥–ª—è {student_data.get('full_name', 'N/A')} –Ω–æ–≤–∞—è")
            print(f"üîç –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø—Ä–æ—Ñ–∏–ª—å –∏ –Ω–∞ –í–ö –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö")
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            profile_data = None
            profile_url = student_data.get('profile_link', '')
            if profile_url:
                profile_data = go_to_student_profile(driver, profile_url)

            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –í–ö –∏ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –§–ò ‚Äî –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –≤ —ç—Ç–æ–º –∑–∞–ø—É—Å–∫–µ –µ—â—ë –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–ª–∏ –¥–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
            vk_different_name = ""
            if profile_data and profile_data.get('vk_link'):
                vk_profile_key = profile_data['vk_link'] or profile_url
                if vk_profile_key not in processed_vk_profiles:
                    vk_different_name = go_to_vk_and_compare_names(
                        driver,
                        profile_data['vk_link'],
                        student_data.get('full_name', '')
                    )
                    processed_vk_profiles.add(vk_profile_key)
                else:
                    print("VK —É–∂–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º –∑–∞–ø—É—Å–∫–µ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –í–ö –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è")

        print(f"üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Excel –¥–ª—è –î–ó ‚Ññ{homework_number}...")
        update_excel_with_homework_data(homework_number, cloud_links, student_data, profile_data, vk_different_name)
        
        return homework_number
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –î–ó: {e}")
        return None

def validate_student_data(student_data, cloud_links, homework_number):
    """–í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º"""
    errors = []
    warnings = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–∞–ª–ª–æ–≤
    mark = student_data.get('mark', '')
    if mark == '' or mark is None:
        errors.append(f"‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –±–∞–ª–ª—ã –∑–∞ –î–ó ‚Ññ{homework_number}")
    else:
        print(f"‚úÖ –ë–∞–ª–ª—ã –∑–∞ –î–ó ‚Ññ{homework_number}: {mark}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ
        if mark >= 2:
            if not cloud_links:
                errors.append(f"‚ùå –û–®–ò–ë–ö–ê: –ë–∞–ª–ª–æ–≤ {mark} ‚â• 2, –Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            else:
                if len(cloud_links) == 1:
                    print(f"‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–∞–π–¥–µ–Ω–∞ –¥–ª—è –±–∞–ª–ª–æ–≤ {mark}")
                else:
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(cloud_links)} —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ–±–ª–∞–∫–æ –¥–ª—è –±–∞–ª–ª–æ–≤ {mark}")
        else:
            if cloud_links:
                if len(cloud_links) == 1:
                    warnings.append(f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë–∞–ª–ª–æ–≤ {mark} < 2, –Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–∞–π–¥–µ–Ω–∞")
                else:
                    warnings.append(f"‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ë–∞–ª–ª–æ–≤ {mark} < 2, –Ω–æ –Ω–∞–π–¥–µ–Ω–æ {len(cloud_links)} —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ–±–ª–∞–∫–æ")
            else:
                print(f"‚úÖ –ë–∞–ª–ª–æ–≤ {mark} < 2, —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞
    full_name = student_data.get('full_name', '')
    if not full_name:
        errors.append("‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞")
    else:
        print(f"‚úÖ –§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞: {full_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
    profile_link = student_data.get('profile_link', '')
    if not profile_link:
        errors.append("‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞")
    else:
        print(f"‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: {profile_link}")
    
    # –í—ã–≤–æ–¥–∏–º –≤—Å–µ –æ—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    if errors:
        print("\nüö® –û–®–ò–ë–ö–ò –í–ê–õ–ò–î–ê–¶–ò–ò:")
        for error in errors:
            print(error)
    
    if warnings:
        print("\n‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–Ø:")
        for warning in warnings:
            print(warning)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True –µ—Å–ª–∏ –Ω–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
    return len(errors) == 0

def is_homework_complete(student_data, cloud_links, homework_number):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–ª–Ω–æ—Å—Ç—å—é –ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–æ–º–∞—à–∫–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º"""
    mark = student_data.get('mark', '')
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –±–∞–ª–ª–æ–≤ - –¥–æ–º–∞—à–∫–∞ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
    if mark == '' or mark is None:
        return False
    
    # –ï—Å–ª–∏ –±–∞–ª–ª–æ–≤ ‚â• 2, —Ç–æ –Ω—É–∂–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ
    if mark >= 2:
        return len(cloud_links) > 0
    
    # –ï—Å–ª–∏ –±–∞–ª–ª–æ–≤ < 2, —Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞
    return True

def check_homework_already_processed(homework_number, student_data, check_links_only=False):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ª–∏ —É–∂–µ –¥–∞–Ω–Ω–∞—è –¥–æ–º–∞—à–∫–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
    
    Args:
        homework_number: –Ω–æ–º–µ—Ä –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
        student_data: –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
        check_links_only: –µ—Å–ª–∏ True, —Ç–æ –¥–ª—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç False,
                         —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏
    """
    filename = "homework_data.xlsx"
    
    # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
    
    try:
        df = pd.read_excel(filename)
    except FileNotFoundError:
        # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        return False
    
    current_full_name = student_data.get('full_name', '')
    current_profile_link = student_data.get('profile_link', '')
    
    # –ò—â–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
    for index, row in df.iterrows():
        existing_full_name = str(row.get('–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', ''))
        existing_profile_link = str(row.get('–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ', ''))
        
        if (current_full_name == existing_full_name and 
            current_profile_link == existing_profile_link and 
            current_full_name != '' and current_profile_link != ''):
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –±–∞–ª–ª—ã –ø–æ —ç—Ç–æ–º—É –î–ó
            mark_col = f'–û—Ü–µ–Ω–∫–∞ –ø–æ –î–ó ‚Ññ{homework_number}'
            existing_mark = row.get(mark_col)
            # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω–æ—Ç—É –¥–∞–Ω–Ω—ã—Ö —Å–æ–≥–ª–∞—Å–Ω–æ –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞–º
            if mark_col in df.columns and pd.notna(existing_mark) and existing_mark != '':
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–∞–∫–æ (–µ—Å–ª–∏ –±–∞–ª–ª–æ–≤ ‚â• 2)
                link_col = f'–°—Å—ã–ª–∫–∞ –Ω–∞ –î–ó ‚Ññ{homework_number}'
                existing_link = row.get(link_col)
                
                if existing_mark >= 2:
                    if existing_link and existing_link != '':
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ —Å—Å—ã–ª–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å)
                        # –ï—Å–ª–∏ check_links_only=True, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True –¥–ª—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö
                        if check_links_only:
                            return True
                        return True
                    else:
                        return False
                else:
                    return True
            else:
                return False
    
    return False

def process_all_homeworks_on_page(driver):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –¥–æ–º–∞—à–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π"""
    wait = WebDriverWait(driver, 20)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 15 –¥–æ 20 —Å–µ–∫—É–Ω–¥
    
    # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å –¥–æ–º–∞—à–∫–∞–º–∏
    wait.until(EC.presence_of_element_located((
        By.CSS_SELECTOR,
        "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr"
    )))
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
    time.sleep(5)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 3 –¥–æ 5 —Å–µ–∫—É–Ω–¥
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
    try:
        rows = driver.find_elements(By.CSS_SELECTOR, "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr")
        total_homeworks = len(rows)
        
        if total_homeworks == 0:
            print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –Ω–æ —Å—Ç—Ä–æ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ñ–¥—ë–º –µ—â—ë...")
            time.sleep(5)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 3 –¥–æ 5 —Å–µ–∫—É–Ω–¥
            rows = driver.find_elements(By.CSS_SELECTOR, "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr")
            total_homeworks = len(rows)
        
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –ù–∞–π–¥–µ–Ω–æ –¥–æ–º–∞—à–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {total_homeworks}")
        
        if total_homeworks == 0:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É.")
            return
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞–±–ª–∏—Ü—ã: {e}")
        print("‚è≥ –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∂–¥–∞—Ç—å...")
        time.sleep(12)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 8 –¥–æ 12 —Å–µ–∫—É–Ω–¥
        try:
            rows = driver.find_elements(By.CSS_SELECTOR, "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr")
            total_homeworks = len(rows)
            print(f"‚úÖ –ü–æ—Å–ª–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–æ: {total_homeworks} –¥–æ–º–∞—à–µ–∫")
        except Exception as e2:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã: {e2}")
            return

    main_window = driver.current_window_handle
    print(f"Handle –æ—Å–Ω–æ–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏: {main_window}")

    for hw_number in range(total_homeworks, 0, -1):
        try:
            print(f"\n{'='*50}")
            print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–º–∞—à–∫–∏ {hw_number} –∏–∑ {total_homeworks}")
            print(f"{'='*50}")

            driver.switch_to.window(main_window)
            time.sleep(0.2)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 0.1 –¥–æ 0.2 —Å–µ–∫—É–Ω–¥—ã

            homework_selector = f"#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr:nth-child({hw_number}) > td.sc-eqUAAy.sc-iGgWBj.jjpiPE.gbwPlL > a"
            homework_link = wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, homework_selector)))
            homework_url = homework_link.get_attribute("href")
            print(f"URL –¥–æ–º–∞—à–∫–∏: {homework_url}")

            driver.execute_script("window.open(arguments[0], '_blank');", homework_url)
            time.sleep(0.5)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 0.3 –¥–æ 0.5 —Å–µ–∫—É–Ω–¥—ã

            initial_handles = set(driver.window_handles)
            homework_window = driver.window_handles[-1]
            driver.switch_to.window(homework_window)

            wait.until(EC.presence_of_element_located((
                By.CSS_SELECTOR,
                "#content > div.homework-chat-header > div.homework-chat-header-left > h1"
            )))
            time.sleep(0.5)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 0.3 –¥–æ 0.5 —Å–µ–∫—É–Ω–¥—ã

            # –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ ‚Äî —Å–∫–∏–ø–∞–µ–º (–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–æ–º–∞—à–∫–∏)
            already_processed = False
            try:
                student_data_check = extract_student_data(driver)
                header = driver.find_element(By.CSS_SELECTOR, "#content > div.homework-chat-header > div.homework-chat-header-left > h1")
                header_text = header.text.strip()
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É, —á—Ç–æ –∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
                homework_no = None
                if "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ1" in header_text or "‚Ññ1" in header_text:
                    homework_no = 1
                elif "–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ2" in header_text or "‚Ññ2" in header_text or "–û–≥–ª—è–Ω–∏—Ç–µ—Å—å –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º" in header_text:
                    homework_no = 2
                else:
                    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –Ω–æ–º–µ—Ä –≤ —Ç–µ–∫—Å—Ç–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                    import re
                    number_match = re.search(r'‚Ññ(\d+)', header_text)
                    if number_match:
                        homework_no = int(number_match.group(1))
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –ª–∏ –¥–æ–º–∞—à–∫–∞, –Ω–æ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫
                if homework_no and check_homework_already_processed(homework_no, student_data_check, check_links_only=True):
                    print(f"–î–æ–º–∞—à–∫–∞ ‚Ññ{homework_no} –¥–ª—è {student_data_check.get('full_name','')} —É–∂–µ –µ—Å—Ç—å ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö.")
                    already_processed = True
                else:
                    pass  # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            except Exception as e:
                # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                pass

            # –ù–∞–∑–Ω–∞—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä—è—é—â–µ–≥–æ –∏ —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–µ—Å–ª–∏ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ)
            if not already_processed:
                try:
                    process_homework_page(driver)
                    print("–£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ: {e}")

                try:
                    homework_number = get_homework_number_and_fill_data(driver)
                    if homework_number:
                        print(f"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥–æ–º–∞—à–∫–∞ ‚Ññ{homework_number}")
                    else:
                        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–æ–º–µ—Ä –¥–æ–º–∞—à–∫–∏")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
            else:
                # –ï—Å–ª–∏ –¥–æ–º–∞—à–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, –≤—Å—ë —Ä–∞–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–æ–∫
                print("–î–æ–º–∞—à–∫–∞ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞, –Ω–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–æ–∫...")
                try:
                    process_homework_page(driver)
                    print("‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ (–¥–ª—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π –¥–æ–º–∞—à–∫–∏)")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–µ: {e}")
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–π –¥–æ–º–∞—à–∫–∏
                try:
                    homework_number = get_homework_number_and_fill_data(driver)
                    if homework_number:
                        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ–º–∞—à–∫–∏ ‚Ññ{homework_number}")
                    else:
                        print("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–æ–º–µ—Ä –¥–æ–º–∞—à–∫–∏")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É —Å –¥–æ–º–∞—à–∫–æ–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É
            driver.close()
            driver.switch_to.window(main_window)
            time.sleep(0.2)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 0.1 –¥–æ 0.2 —Å–µ–∫—É–Ω–¥—ã

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–º–∞—à–∫–∏ ‚Ññ{hw_number}: {e}")
            try:
                for handle in driver.window_handles:
                    if handle != main_window:
                        driver.switch_to.window(handle)
                        driver.close()
                driver.switch_to.window(main_window)
            except Exception as cleanup_error:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤–∫–ª–∞–¥–æ–∫: {cleanup_error}")
            continue

    print("\n–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –¥–æ–º–∞—à–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

def process_all_pages(driver):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π"""
    page_number = 1
    
    while True:
        print(f"\n" + "="*60)
        print(f"–û–ë–†–ê–ë–û–¢–ö–ê –°–¢–†–ê–ù–ò–¶–´ ‚Ññ{page_number}")
        print(f"="*60)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –¥–æ–º–∞—à–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        process_all_homeworks_on_page(driver)
        
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        try:
            # –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            wait = WebDriverWait(driver, 15)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 10 –¥–æ 15 —Å–µ–∫—É–Ω–¥
            wait.until(EC.presence_of_element_located((
                By.CSS_SELECTOR,
                "#react-homeworks > div > div.sc-gFqAkR.kiXkom > div > button.r-button.button-pagination.active"
            )))
            
            # –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            active_page_btn = driver.find_element(By.CSS_SELECTOR, 
                "#react-homeworks > div > div.sc-gFqAkR.kiXkom > div > button.r-button.button-pagination.active")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
            all_page_buttons = driver.find_elements(By.CSS_SELECTOR, 
                "#react-homeworks > div > div.sc-gFqAkR.kiXkom > div > button.r-button.button-pagination")
            
            # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –∞–∫—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
            active_index = -1
            for i, btn in enumerate(all_page_buttons):
                if btn == active_page_btn:
                    active_index = i
                    break
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
            if active_index > 0:  # –µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞
                prev_page_btn = all_page_buttons[active_index - 1]
                
                print(f"\n–¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {active_page_btn.text}")
                print(f"–ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: {prev_page_btn.text}")
                
                prev_page_btn.click()
                
                # –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
                time.sleep(15)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 8 –¥–æ 15 —Å–µ–∫—É–Ω–¥
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
                try:
                    wait.until(EC.presence_of_element_located((
                        By.CSS_SELECTOR,
                        "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr"
                    )))
                    print("‚úÖ –ù–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                except Exception as load_error:
                    print(f"‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –º–µ–¥–ª–µ–Ω–Ω–æ: {load_error}")
                    time.sleep(8)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 3 –¥–æ 8 —Å–µ–∫—É–Ω–¥
                
                page_number += 1
                # –£–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
            else:
                print("\n–î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞. –ë–æ–ª—å—à–µ —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–µ—Ç.")
                break
                
        except Exception as e:
            print(f"\n–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: {e}")
            print("–í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.")
            break
    
    print(f"\n" + "="*60)
    print(f"–û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê! –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {page_number}")
    print(f"="*60)

def go_to_last_page(driver):
    """–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ —Å–ø–∏—Å–∫–æ–º –¥–æ–º–∞—à–µ–∫"""
    wait = WebDriverWait(driver, 25)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 20 –¥–æ 25 —Å–µ–∫—É–Ω–¥
    # –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    last_page_btn = wait.until(EC.element_to_be_clickable((
        By.CSS_SELECTOR,
        "#react-homeworks > div > div.sc-gFqAkR.kiXkom > div > button.r-button.button-pagination.boundary > span"
    )))
    
    last_page_btn.click()
    
    # –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã —Å –¥–æ–º–∞—à–∫–∞–º–∏
    wait.until(EC.presence_of_element_located((
        By.CSS_SELECTOR,
        "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr"
    )))
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–∞—É–∑—É –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
    time.sleep(20)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 15 –¥–æ 20 —Å–µ–∫—É–Ω–¥
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
    try:
        rows = driver.find_elements(By.CSS_SELECTOR, "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr")
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –ù–∞–π–¥–µ–Ω–æ {len(rows)} –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —É–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å—Ç—Ä–æ–∫–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –¥–∞–Ω–Ω—ã–µ
        if rows:
            first_row = rows[0]
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–º–∞—à–∫—É
                homework_link = first_row.find_element(By.CSS_SELECTOR, "td.sc-eqUAAy.sc-iGgWBj.jjpiPE.gbwPlL > a")
                if homework_link:
                    print("‚úÖ –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –¥–æ–º–∞—à–∫—É - —Ç–∞–±–ª–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞")
                else:
                    time.sleep(12)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 8 –¥–æ 12 —Å–µ–∫—É–Ω–¥
            except Exception as link_error:
                time.sleep(15)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 10 –¥–æ 15 —Å–µ–∫—É–Ω–¥
        else:
            time.sleep(15)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 10 –¥–æ 15 —Å–µ–∫—É–Ω–¥
            rows = driver.find_elements(By.CSS_SELECTOR, "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr")
            print(f"‚úÖ –ü–æ—Å–ª–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–∞–π–¥–µ–Ω–æ: {len(rows)} —Å—Ç—Ä–æ–∫")
            
    except Exception as e:
        time.sleep(20)  # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 15 –¥–æ 20 —Å–µ–∫—É–Ω–¥
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
        try:
            rows = driver.find_elements(By.CSS_SELECTOR, "#react-homeworks > div > div.sc-gFqAkR.kiXkom > table > tbody > tr")
            print(f"‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –Ω–∞–π–¥–µ–Ω–æ {len(rows)} –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π")
        except Exception as e2:
            pass
    
    print("‚úÖ –ü–µ—Ä–µ—à–ª–∏ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –≥–æ—Ç–æ–≤–∞ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ")

def process_cloud_links(cloud_links):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±–ª–∞–∫–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
    if not cloud_links:
        return ""
    
    if len(cloud_links) == 1:
        return cloud_links[0]
    
    # –ï—Å–ª–∏ —Å—Å—ã–ª–æ–∫ –Ω–µ—Å–∫–æ–ª—å–∫–æ, –æ–±—ä–µ–¥–∏–Ω—è–µ–º –∏—Ö —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(cloud_links)} —Å—Å—ã–ª–æ–∫ –Ω–∞ –æ–±–ª–∞–∫–æ:")
    for i, link in enumerate(cloud_links, 1):
        print(f"   {i}. {link}")
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ " | " (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è —á–µ—Ä—Ç–∞)
    combined_links = " | ".join(cloud_links)
    print(f"‚úÖ –í—Å–µ —Å—Å—ã–ª–∫–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω—ã –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É")
    
    return combined_links

def is_valid_cloud_link(href):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Å—ã–ª–∫–∞ –≤–∞–ª–∏–¥–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –Ω–∞ –æ–±–ª–∞–∫–æ"""
    if not href or not href.startswith('http'):
        return False
    
    # –ò—Å–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ —è–≤–Ω–æ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã
    forbidden_domains = ["vk.cc", "vk.me", "authors.vk.company"]
    if any(domain in href for domain in forbidden_domains):
        return False
    
    # –î–æ–±–∞–≤–ª—è–µ–º –í–°–ï —Å—Å—ã–ª–∫–∏ –Ω–∞ vk.com (–≤–∫–ª—é—á–∞—è —Ç–µ, –≥–¥–µ –≤–Ω—É—Ç—Ä–∏ –æ–±–ª–∞—á–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã)
    if "vk.com" in href:
        return True
    
    # –ò—Å–∫–ª—é—á–∞–µ–º –æ–±—ã—á–Ω—ã–µ mail.ru (–Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º cloud.mail.ru)
    if "mail.ru" in href and "cloud.mail.ru" not in href:
        return False
    
    # –î–æ–±–∞–≤–ª—è–µ–º –í–°–ï –æ—Å—Ç–∞–ª—å–Ω—ã–µ HTTP —Å—Å—ã–ª–∫–∏
    return True

if __name__ == "__main__":
    create_excel_table()
    driver = open_vk_homework_page()
    go_to_last_page(driver)  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    process_all_pages(driver)  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    print("–°–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        pass
