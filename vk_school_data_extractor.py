import pandas as pd
import re
from urllib.parse import urlparse

def extract_profile_id_from_url(profile_url):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç ID –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ URL authors.vk.company"""
    if not profile_url or pd.isna(profile_url):
        return None
    
    # –ü—Ä–∏–º–µ—Ä—ã:
    # https://authors.vk.company/profile/a.khaliullina-indradzh/
    # https://authors.vk.company/cabinet/k.adamova/
    # –ò–∑–≤–ª–µ–∫–∞–µ–º: a.khaliullina-indradzh –∏–ª–∏ k.adamova
    match = re.search(r'/(?:profile|cabinet)/([^/]+)/?$', str(profile_url))
    if match:
        return match.group(1)
    return None



def find_student_in_vk_school(homework_data_row, vk_school_df):
    """–ò—â–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ –®–∫–æ–ª—ã –∞–≤—Ç–æ—Ä–æ–≤ VK"""
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ homework_data
    student_name = str(homework_data_row['–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã']).strip()
    profile_url = str(homework_data_row['–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ']).strip()
    
    if pd.isna(student_name) or student_name == '' or pd.isna(profile_url) or profile_url == '':
        print(f"‚ùå –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É - –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –§–ò –∏–ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å")
        return None
    
    print(f"üîç –ò—â–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞: {student_name}")
    print(f"üîç –ü—Ä–æ—Ñ–∏–ª—å: {profile_url}")
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø—Ä–æ—Ñ–∏–ª—è (—É–±–∏—Ä–∞–µ–º /profile/ –∏–ª–∏ /cabinet/)
    profile_id = extract_profile_id_from_url(profile_url)
    if not profile_id:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å ID –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ URL: {profile_url}")
        return None
    
    print(f"üîç ID –ø—Ä–æ—Ñ–∏–ª—è: {profile_id}")
    
    # –ò—â–µ–º –≤ —Ç–∞–±–ª–∏—Ü–µ –®–∫–æ–ª—ã –∞–≤—Ç–æ—Ä–æ–≤ VK —Ç–æ–ª—å–∫–æ –ø–æ ID –ø—Ä–æ—Ñ–∏–ª—è
    for index, vk_row in vk_school_df.iterrows():
        vk_name = str(vk_row.iloc[2]).strip()  # –°—Ç–æ–ª–±–µ—Ü C (–§–ò)
        vk_profile = str(vk_row.iloc[3]).strip()  # –°—Ç–æ–ª–±–µ—Ü D (—Å—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ ID –ø—Ä–æ—Ñ–∏–ª—è
        profile_matches = profile_id in vk_profile
        
        if profile_matches:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å—Ç—É–¥–µ–Ω—Ç –≤ —Å—Ç—Ä–æ–∫–µ {index + 1}")
            print(f"‚úÖ –§–ò –≤ –®–∫–æ–ª–µ –∞–≤—Ç–æ—Ä–æ–≤ VK: {vk_name}")
            print(f"‚úÖ –°—Å—ã–ª–∫–∞ –≤ –®–∫–æ–ª–µ –∞–≤—Ç–æ—Ä–æ–≤ VK: {vk_profile}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            u1_data = vk_row.iloc[6]  # –°—Ç–æ–ª–±–µ—Ü G (–£1 - –í–• –∞–Ω–∫–µ—Ç–∞)
            u7_38_data = vk_row.iloc[9]  # –°—Ç–æ–ª–±–µ—Ü J (–£7/38)
            u7_5_data = vk_row.iloc[10]  # –°—Ç–æ–ª–±–µ—Ü K (–£7/5)
            
            print(f"‚úÖ –£1 (–í–• –∞–Ω–∫–µ—Ç–∞): {u1_data}")
            print(f"‚úÖ –£7/38: {u7_38_data}")
            print(f"‚úÖ –£7/5: {u7_5_data}")
            
            return {
                'u1': u1_data,
                'u7_38': u7_38_data,
                'u7_5': u7_5_data,
                'vk_school_row': index + 1,
                'vk_name': vk_name
            }
    
    print(f"‚ùå –°—Ç—É–¥–µ–Ω—Ç {student_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –®–∫–æ–ª–µ –∞–≤—Ç–æ—Ä–æ–≤ VK")
    return None

def update_homework_data():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –®–∫–æ–ª—ã –∞–≤—Ç–æ—Ä–æ–≤ VK...")
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É homework_data
        print("üìñ –ó–∞–≥—Ä—É–∂–∞–µ–º homework_data.xlsx...")
        homework_df = pd.read_excel('homework_data.xlsx')
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(homework_df)} —Å—Ç—Ä–æ–∫ –∏–∑ homework_data.xlsx")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –®–∫–æ–ª—ã –∞–≤—Ç–æ—Ä–æ–≤ VK
        print("üìñ –ó–∞–≥—Ä—É–∂–∞–µ–º –®–∫–æ–ª–∞ –∞–≤—Ç–æ—Ä–æ–≤ VK –¢–ë (–¢–ë) 2025-08-17.xlsx...")
        vk_school_df = pd.read_excel('–®–∫–æ–ª–∞ –∞–≤—Ç–æ—Ä–æ–≤ VK –¢–ë (–¢–ë) 2025-08-17.xlsx')
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(vk_school_df)} —Å—Ç—Ä–æ–∫ –∏–∑ –®–∫–æ–ª—ã –∞–≤—Ç–æ—Ä–æ–≤ VK")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü
        print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ homework_data.xlsx:")
        print(f"   –°—Ç–æ–ª–±–µ—Ü C: {homework_df.columns[2]} (–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞)")
        print(f"   –°—Ç–æ–ª–±–µ—Ü D: {homework_df.columns[3]} (–í–• –ê–Ω–∫–µ—Ç–∞ –£1)")
        print(f"   –°—Ç–æ–ª–±–µ—Ü K: {homework_df.columns[10]} (–£7/5)")
        print(f"   –°—Ç–æ–ª–±–µ—Ü L: {homework_df.columns[11]} (–£7/38)")
        print(f"   –°—Ç–æ–ª–±–µ—Ü M: {homework_df.columns[12]} (–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å)")
        
        print(f"\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –®–∫–æ–ª—ã –∞–≤—Ç–æ—Ä–æ–≤ VK:")
        print(f"   –°—Ç–æ–ª–±–µ—Ü C: {vk_school_df.columns[2]} (–§–ò)")
        print(f"   –°—Ç–æ–ª–±–µ—Ü D: {vk_school_df.columns[3]} (–ü—Ä–æ—Ñ–∏–ª—å)")
        print(f"   –°—Ç–æ–ª–±–µ—Ü G: {vk_school_df.columns[6]} (–£1 - –í–• –∞–Ω–∫–µ—Ç–∞)")
        print(f"   –°—Ç–æ–ª–±–µ—Ü J: {vk_school_df.columns[9]} (–£7/38)")
        print(f"   –°—Ç–æ–ª–±–µ—Ü K: {vk_school_df.columns[10]} (–£7/5)")
        
        print(f"\nüîç –§–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫:")
        print(f"   homework_data: /profile/ID/")
        print(f"   –®–∫–æ–ª–∞ –∞–≤—Ç–æ—Ä–æ–≤ VK: /cabinet/ID/")
        print(f"   –ü–æ–∏—Å–∫ –ø–æ ID –ø—Ä–æ—Ñ–∏–ª—è (–±–µ–∑ /profile/ –∏ /cabinet/)")
        
        print(f"\nüîç –ü–æ–∏—Å–∫:")
        print(f"   –ü–æ–∏—Å–∫ —Ç–æ–ª—å–∫–æ –ø–æ ID –ø—Ä–æ—Ñ–∏–ª—è (–±–µ–∑ /profile/ –∏ /cabinet/)")
        print(f"   –§–ò –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–∏—Å–∫–µ")
        
        # –°—á—ë—Ç—á–∏–∫–∏
        found_count = 0
        not_found_count = 0
        updated_count = 0
        
        # –°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã
        not_found_students = []
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –≤ homework_data
        for index, row in homework_df.iterrows():
            print(f"\n{'='*60}")
            print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ {index + 1} –∏–∑ {len(homework_df)}")
            print(f"{'='*60}")
            
            # –ò—â–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –®–∫–æ–ª–µ –∞–≤—Ç–æ—Ä–æ–≤ VK
            student_data = find_student_in_vk_school(row, vk_school_df)
            
            if student_data:
                found_count += 1
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ homework_data
                try:
                    # –°—Ç–æ–ª–±–µ—Ü C (–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞) - –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –§–ò –∏–∑ –®–∫–æ–ª—ã –∞–≤—Ç–æ—Ä–æ–≤ VK
                    homework_df.iloc[index, 2] = student_data['vk_name']
                    
                    # –°—Ç–æ–ª–±–µ—Ü D (–í–• –ê–Ω–∫–µ—Ç–∞ –£1)
                    homework_df.iloc[index, 3] = student_data['u1']
                    
                    # –°—Ç–æ–ª–±–µ—Ü K (–£7/5)
                    homework_df.iloc[index, 10] = student_data['u7_5']
                    
                    # –°—Ç–æ–ª–±–µ—Ü L (–£7/38)
                    homework_df.iloc[index, 11] = student_data['u7_38']
                    
                    updated_count += 1
                    print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ —Å—Ç—Ä–æ–∫–µ {index + 1}")
                    print(f"‚úÖ –§–ò –æ–±–Ω–æ–≤–ª–µ–Ω: {student_data['vk_name']}")
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
            else:
                not_found_count += 1
                # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –Ω–µ–Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
                student_name = str(row['–§–ò —Å—Ç—É–¥–µ–Ω—Ç–∞ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã']).strip()
                profile_url = str(row['–°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ']).strip()
                not_found_students.append({
                    'name': student_name,
                    'profile': profile_url,
                    'row': index + 1
                })
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
        print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É...")
        with pd.ExcelWriter('homework_data.xlsx', engine='openpyxl') as writer:
            homework_df.to_excel(writer, index=False, sheet_name='–î–∞–Ω–Ω—ã–µ')
            
            # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
            worksheet = writer.sheets['–î–∞–Ω–Ω—ã–µ']
            for column in worksheet.columns:
                max_length = 0
                column_letter = column[0].column_letter
                
                for cell in column:
                    try:
                        if len(str(cell.value)) > max_length:
                            max_length = len(str(cell.value))
                    except:
                        pass
                
                adjusted_width = min(max(max_length + 2, 15), 50)
                worksheet.column_dimensions[column_letter].width = adjusted_width
        
        print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {len(homework_df)}")
        print(f"   –°—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {found_count}")
        print(f"   –°—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ: {not_found_count}")
        print(f"   –°—Ç—Ä–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {updated_count}")
        
        # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –Ω–µ–Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        if not_found_students:
            print(f"\n‚ùå –°–¢–£–î–ï–ù–¢–´, –ö–û–¢–û–†–´–ï –ù–ï –ë–´–õ–ò –ù–ê–ô–î–ï–ù–´:")
            print(f"{'='*80}")
            for student in not_found_students:
                print(f"   –°—Ç—Ä–æ–∫–∞ {student['row']}: {student['name']}")
                print(f"   –ü—Ä–æ—Ñ–∏–ª—å: {student['profile']}")
                print(f"   {'-'*60}")
        else:
            print(f"\n‚úÖ –í—Å–µ —Å—Ç—É–¥–µ–Ω—Ç—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞–π–¥–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    update_homework_data()
    print("\nÔøΩÔøΩ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!") 